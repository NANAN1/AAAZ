#include<stdio.h>
#include<windows.h>

/*
	函数功能：读入多个字符串
	入口参数：(char *)str——字符串首地址
	返回值：(int )n——字符串个数
*/
int I_Mystr_scan(char str[][100])
{
	int i, n;
	system("cls");
	printf("Input the number of strings please:(or input '0' to exit)");
	scanf("%d", &n);
	for (i = 0; i < n; i++)
	{
		printf("The NO.%d:", i + 1);
		scanf("%s", *(str + i));
	}
	return n;
}

/*
	函数功能：打印多个字符串
	入口参数：(char *)str——字符串首地址,(int)n——字符串个数
	返回值：无
*/
void V_Mystr_print(char str[][100],int n)
{
	int i;
	printf("There is your strings after operation:\n");
	for (i = 0; i < n; i++)
	{
		printf("The NO.%d:", i + 1);
		printf("%s\n", *(str + i));
	}
	return n;
}

/*
	函数功能：计算字符串长度
	入口参数：(char *)str——字符串首地址
	返回值：(int )i——字符串长度
*/
int I_Mystrlen(char str[])
{
	int i = 0;
	while (1)
	{
		if (str[i] != '\0')
			i++;
		else
			break;
	}
	return i;
}

/*
	函数功能：比较字符串大小
	入口参数：(char *)str_1,(char *)str_2——两个字符串首地址
	返回值：(int )i——正数为str_1>str_2，负数为str_1<str_2，0为str_1==str_2
*/
int I_Mystrcmp(char str_1[], char str_2[])
{
	int i;
	for (i = 0; i < 100; i++)
	{
		if (*(str_1 + i) == '\0' || *(str_2 + i) == '\0')
		{
			i = I_Mystrlen(str_1) - I_Mystrlen(str_2);
			break;
		}
		if (*(str_1 + i) != *(str_2 + i))
		{
			i = *(str_1 + i) - *(str_2 + i);
			break;
		}
	}
	return i;
}

/*
	函数功能：交换字符串
	入口参数：(char *)str_1,(char *)str_2——两个字符串首地址
	返回值：无
*/
void V_str_swap(char* str_1, char* str_2)
{
	int i, n;
	char C;
	n = I_Mystrlen(str_1) > I_Mystrlen(str_2) ? I_Mystrlen(str_1) : I_Mystrlen(str_2);
	for (i = 0; i < n+1; i++)
	{
		C = *(str_1 + i);
		*(str_1 + i) = *(str_2 + i);
		*(str_2 + i) = C;
	}
}

/*
	函数功能：字符串从小到大
	入口参数：(char *)str——字符串首地址,(int)n——字符串个数
	返回值：无
*/
void V_str_sort(char str[][100], int n)
{
	int i, j, k;
	for (i = 0; i < n; i++)
	{
		for (j = i + 1, k = i; j < n; j++)
		{
			if (I_Mystrcmp(*(str + j), *(str + k)) < 0)
				k = j;
		}
		if (k != i)
			V_str_swap(*(str + i), *(str + k));
	}
}

int main()
{
	int n;
	char str[100][100];
	while (0 < (n = I_Mystr_scan(str)))
	{
		V_str_sort(str, n);
		V_Mystr_print(str, n);
		system("pause");
	}
	return 0;
}
